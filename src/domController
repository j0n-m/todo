import pubSub from "./pubSub";

const domController = (function () {
  let allProjects = [];
  // DOM selectors
  const contentContainer = document.querySelector('.content');
  const projectList = document.querySelector('.project-list');
  const projectAddForm = document.querySelector('#project-add-form')
  const newProjectBtn = document.querySelector('.new-project-btn');
  const formContainer = document.querySelector('.form-field');
  const formCancelBtn = document.querySelector('#project-cancel-btn');
  const formTextbox = document.querySelector('#project-title-textbox');
  const errorMsg = document.querySelector('.error-msg');

  // Event Handlers
  projectAddForm.addEventListener('submit', projectAdd);
  newProjectBtn.addEventListener('click', displayForm);
  formCancelBtn.addEventListener('click', displayForm);


  //Pubsub
  pubSub.subscribe('updateProjectList', addToProjectList);
  pubSub.subscribe('error-duplicate', displayError)
  pubSub.subscribe('newTask', updateProjectList);

  // Event Functions
  function render() {
    let categoryBtns = document.querySelectorAll('.project-btn');
    console.log('called render')
    categoryBtns.forEach(categoryBtn => {
      categoryBtn.addEventListener('click', changeMainContent);
    });
  }
  function projectAdd(e) {
    e.preventDefault();
    pubSub.publish('addNewProject', { title: formTextbox.value });
    displayForm();
  }
  function displayForm() {
    formTextbox.value = '';
    formContainer.classList.toggle('hide');
  }
  function updateProjectList(obj) {
    console.log('updateProjectList:', obj);
    allProjects = obj;
  }
  function addToProjectList(projObj) {
    const projectTitle = projObj.title;
    const projectBtn = document.createElement('div');
    projectBtn.classList.add('btn');
    projectBtn.classList.add('project-btn');
    projectBtn.textContent = projectTitle;
    console.log('added to projectList:, ', projObj.title);

    projectList.appendChild(projectBtn);
    allProjects.push(projObj);
    render();
  }
  function displayError(msg) {
    errorMsg.textContent = msg;

    setTimeout(function () {
      errorMsg.textContent = '';
    }, 4000)
  }
  function loadContent(index) {
    const project = allProjects[index];
    const tasks = project.tasks;
    contentContainer.replaceChildren();

    tasks.forEach(task => {
      const colorTile = document.createElement('div');
      colorTile.classList.add('color-tile');

      const mainTile = document.createElement('div');
      mainTile.classList.add('main-tile');

      const pTitle = document.createElement('h1')
      pTitle.textContent = task.getTitle();

      mainTile.appendChild(pTitle);
      colorTile.appendChild(mainTile);
      contentContainer.appendChild(colorTile);
    })
  }
  function loadDefaultPage() {
    loadContent(0);
  }
  function changeMainContent(e) {
    console.log('DOM projects', allProjects);
    let projectTitle = e.target.textContent;

    let activeProject = getProjectInfo(projectTitle);
    console.log('activeProjTasks', activeProject.index);

    loadContent(activeProject.index);
  }
  function getProjectInfo(projectTitle) {
    let projectIndex;
    let projectTasks;
    allProjects.find((project, index) => {
      if (project.getTitle() == projectTitle) {
        // console.log('getProjectInfo', project.tasks, index);
        projectTasks = project.tasks;
        console.log('projTasks', projectTasks)
        projectIndex = index;
      }
    })
    return { title: projectTitle, index: projectIndex, tasks: projectTasks };
  }
  function projectHasTasks(index) {
    if (allProjects[index].tasks.length) {
      console.log('true there are tasks')
      return true;
    }
    return false;
  }
  return { changeMainContent, loadDefaultPage };

})();

export default domController;